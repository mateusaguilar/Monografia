"0","G = 100"
"0","grid <- (1:G)/G  # função "
"0",""
"0",""
"0","M <- matrix(NA, nrow = NROW(df_test2), ncol = G)"
"0",""
"0","for(j in 1:G){"
"0","  M[, j] = ifelse(df_test2$pi_hat >= grid[j], 1, 0)"
"0","}"
"0",""
"0","M2 <- matrix(NA, nrow = G, ncol = 4)"
"0",""
"0","for(i in 1:G){"
"0","  M2[i, 1] = mean((M[, i] == 1) & (df_test2$Y == 1))    # sensibilidade"
"0","  M2[i, 2] = mean((M[, i] == 0) & (df_test2$Y == 0))    # especificidade"
"0","  M2[i, 3] = mean(M[, i] == df_test2$Y)                 # acurácia"
"0","}"
"0","# M2[, 4] = M2[, 1] + M2[, 2] - 1                         # Indice de Youden"
"0","M2[, 4] = (M2[, 1] + M2[, 2])/2                         # acurácia balanceada"
"0",""
"0","# M2"
"0",""
"0","# classificador"
"0","K <- max(which(M2[, 4] == max(M2[, 4])))"
"0","#df_test2$y_hat = M[, min(which(M2[, 4] == max(M2[, 4])))]"
"0","df_test2$y_hat = M[, max(which(M2[, 4] == max(M2[, 4])))]"
